name: Linting

on: pull_request

jobs:
  ci:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        php: ["8.2", "8.3"]
        dependency-version: [prefer-lowest, prefer-stable]

    name: Linting PHP${{ matrix.php }} - ${{ matrix.os }} - ${{ matrix.dependency-version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, mbstring, zip
          coverage: pcov

      - name: Install Datadog PHP Tracer
        run: |
          curl -LO "https://github.com/DataDog/dd-trace-php/releases/download/0.99.1/datadog-setup.php"
          sudo php datadog-setup.php --php-bin=all --enable-appsec
          sudo rm -rf datadog-setup.php

      - name: Get Composer cache directory
        id: composer-cache
        shell: bash
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: dependencies-php-${{ matrix.php }}-os-${{ matrix.os }}-version-${{ matrix.dependency-version }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: dependencies-php-${{ matrix.php }}-os-${{ matrix.os }}-version-${{ matrix.dependency-version }}-composer-

      - name: Install Composer dependencies
        run: composer update --${{ matrix.dependency-version }} --no-interaction --prefer-dist

      - name: Rector check
        run: composer run rector:check

      - name: Pint check
        run: composer run pint:check

      - name: PHPStan check
        run: composer run phpstan:check
